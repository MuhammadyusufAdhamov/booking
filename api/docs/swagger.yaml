basePath: /v1
definitions:
  models.AuthResponse:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      username:
        type: string
    type: object
  models.Booking:
    properties:
      created_at:
        type: string
      id:
        type: integer
      number_of_users:
        type: integer
      room_id:
        type: integer
      stay:
        type: string
      stay_date:
        type: string
      user_id:
        type: integer
    type: object
  models.CreateBookingRequest:
    properties:
      number_of_users:
        type: integer
      room_id:
        type: integer
      stay:
        type: string
      stay_date:
        type: string
      user_id:
        type: integer
    type: object
  models.CreateHotelRequest:
    properties:
      hotel_image_url:
        type: string
      hotel_location:
        type: string
      hotel_name:
        type: string
      hotel_rating:
        type: string
      number_of_rooms:
        type: integer
      owner_id:
        type: integer
    required:
    - hotel_image_url
    - hotel_location
    - hotel_name
    - hotel_rating
    - number_of_rooms
    - owner_id
    type: object
  models.CreateOwnerRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 30
        minLength: 2
        type: string
      last_name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      phone_number:
        type: string
      username:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
  models.CreateRoomRequest:
    properties:
      hotel_id:
        type: integer
      number_of_room:
        type: integer
      price:
        type: number
      room_image_url:
        type: string
      sleeps:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 30
        minLength: 2
        type: string
      last_name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      phone_number:
        type: string
      username:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.GetAllBookingsResponse:
    properties:
      bookings:
        items:
          $ref: '#/definitions/models.Booking'
        type: array
      count:
        type: integer
    type: object
  models.GetAllHotelsResponse:
    properties:
      count:
        type: integer
      hotels:
        items:
          $ref: '#/definitions/models.Hotel'
        type: array
    type: object
  models.GetAllOwnersResponse:
    properties:
      count:
        type: integer
      owners:
        items:
          $ref: '#/definitions/models.Owner'
        type: array
    type: object
  models.GetAllRoomsResponse:
    properties:
      count:
        type: integer
      rooms:
        items:
          $ref: '#/definitions/models.Room'
        type: array
    type: object
  models.GetAllUsersResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Hotel:
    properties:
      created_at:
        type: string
      hotel_image_url:
        type: string
      hotel_location:
        type: string
      hotel_name:
        type: string
      hotel_rating:
        type: string
      id:
        type: integer
      number_of_rooms:
        type: integer
      owner_id:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Owner:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 30
        minLength: 2
        type: string
      last_name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  models.ResponseOK:
    properties:
      message:
        type: string
    type: object
  models.Room:
    properties:
      created_at:
        type: string
      hotel_id:
        type: integer
      id:
        type: integer
      number_of_room:
        type: integer
      price:
        type: number
      room_image_url:
        type: string
      sleeps:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  models.UpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    type: object
  models.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a blog service api.
  title: Swagger for blog api
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Forgot password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a user
      tags:
      - auth
  /auth/update-password:
    post:
      consumes:
      - application/json
      description: Update password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update password
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Verify user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify user
      tags:
      - auth
  /auth/verify-forgot-password:
    post:
      consumes:
      - application/json
      description: Verify forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify forgot password
      tags:
      - auth
  /booking/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a booking
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a booking
      tags:
      - booking
  /bookings:
    get:
      consumes:
      - application/json
      description: Get all bookings
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllBookingsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all bookings
      tags:
      - booking
    post:
      consumes:
      - application/json
      description: Create a booking
      parameters:
      - description: Booking
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Booking'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a booking
      tags:
      - booking
  /bookings/{id}:
    get:
      consumes:
      - application/json
      description: Get booking by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get booking by id
      tags:
      - booking
    put:
      consumes:
      - application/json
      description: Update a booking
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Booking
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a booking
      tags:
      - booking
  /file-upload:
    post:
      consumes:
      - application/json
      description: File upload
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: File upload
      tags:
      - file-upload
  /hotel/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a hotel
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a hotel
      tags:
      - hotel
  /hotels:
    get:
      consumes:
      - application/json
      description: Get all hotels
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllHotelsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all hotels
      tags:
      - hotel
    post:
      consumes:
      - application/json
      description: Create a hotel
      parameters:
      - description: Hotel
        in: body
        name: hotel
        required: true
        schema:
          $ref: '#/definitions/models.CreateHotelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Hotel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a hotel
      tags:
      - hotel
  /hotels/{id}:
    get:
      consumes:
      - application/json
      description: Get hotel by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Hotel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get hotel by id
      tags:
      - hotel
    put:
      consumes:
      - application/json
      description: Update a hotel
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Hotel
        in: body
        name: hotel
        required: true
        schema:
          $ref: '#/definitions/models.CreateHotelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Hotel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a hotel
      tags:
      - hotel
  /owner/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an owner
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an owner
      tags:
      - owner
  /owners:
    get:
      consumes:
      - application/json
      description: Get all owners
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllOwnersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all owners
      tags:
      - owner
    post:
      consumes:
      - application/json
      description: Create an owner
      parameters:
      - description: Owner
        in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/models.CreateOwnerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Owner'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create an owner
      tags:
      - owner
  /owners/{id}:
    get:
      consumes:
      - application/json
      description: Get owner by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Owner'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get owner by id
      tags:
      - owner
    put:
      consumes:
      - application/json
      description: Update an owner
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Owner
        in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/models.CreateOwnerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Owner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an owner
      tags:
      - owner
  /room/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a room
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a room
      tags:
      - room
  /rooms:
    get:
      consumes:
      - application/json
      description: Get all rooms
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllRoomsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all rooms
      tags:
      - room
    post:
      consumes:
      - application/json
      description: Create a room
      parameters:
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Room'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a room
      tags:
      - room
  /rooms/{id}:
    get:
      consumes:
      - application/json
      description: Get room by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get room by id
      tags:
      - room
    put:
      consumes:
      - application/json
      description: Update a room
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a room
      tags:
      - room
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a user
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user by id
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
